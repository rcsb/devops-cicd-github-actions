name: Docker Workflow
# Standard workflow for any projects only building and running docker images. For language specific projects, see other
# workflows within the shared library.

on:
  workflow_call:
    inputs:
      dockerfile_location:
        type: string
        default: "Dockerfile"
        description: "The location of the Dockerfile relative to the root of the repository."
      repo_url:
        type: string
        default: "harbor.devops.k8s.rcsb.org"
        description: "The URL of the remote Docker image repository."
      repo_project:
        type: string
        required: true
        description: "The name of the project or organization in the remote Docker image repository."
      docker_image_name:
        type: string
        required: true
        description: "The name of the Docker image to create."
      docker_build_context:
        type: string
        default: "."
        description: "The path location of the docker build context, relative to the project root."
      mainline_branch:
        type: string
        default: format('refs/heads/{0}', github.event.repository.default_branch)
        description: "The mainline branch for the repo. Deployments to the staging and production environments are done only on push to this branch. Defaults to the repo's default branch."
  workflow_dispatch:
    inputs:
      dockerfile_location:
        type: string
        default: "Dockerfile"
        description: "The location of the Dockerfile relative to the root of the repository."
      repo_url:
        type: string
        default: "harbor.devops.k8s.rcsb.org"
        description: "The URL of the remote Docker image repository."
      repo_project:
        type: string
        required: true
        description: "The name of the project or organization in the remote Docker image repository."
      docker_image_name:
        type: string
        required: true
        description: "The name of the Docker image to create."
      docker_build_context:
        type: string
        default: "."
        description: "The path location of the docker build context, relative to the project root."
      do_skaffold_deploy:
        type: boolean
        default: false
        description: "Deploy the Docker image via Helm and Skaffold."
      mainline_branch:
        type: string
        default: format('refs/heads/{0}', github.event.repository.default_branch)
        description: "The mainline branch for the repo. Deployments to the staging and production environments are done only on push to this branch. Defaults to the repo's default branch."

jobs:
  lint:
    name: "Lint Dockerfile"
    uses: ./.github/workflows/lint_docker.yaml
    with:
      dockerfile_location: ${{ inputs.dockerfile_location }}
  build-and-push:
    name: "Build and Push Docker Image"
    uses: ./.github/workflows/build_docker.yaml
    needs: lint
    with:
      repo_url: ${{ inputs.repo_url }}
      repo_project: ${{ inputs.repo_project }}
      docker_image_name: ${{ inputs.docker_image_name }}
      docker_build_context: ${{ inputs.docker_build_context }}
  # Staging jobs
  build_docker_staging:
    name: "Push docker image with staging tag"
    if: (${{ inputs.do_skaffold_deploy }}) && (github.ref == "refs/heads/${{ inputs.mainline_branch }}") && (github.event_name != 'pull_request')
    needs:
      - build-and-push
    uses: ./.github/workflows/retag_docker.yaml
    with:
      repo_url: "${{ inputs.repo_url }}"
      repo_project: "${{ inputs.repo_project }}"
      docker_image_name: "${{ inputs.docker_image_name }}"
      old_tag: "${{ github.ref_name }}"
      new_tag: "staging"
  # Production jobs
  build_docker_production:
    name: "Push docker image with production tag"
    if: (${{ inputs.do_skaffold_deploy }}) && (github.ref == "refs/heads/${{ inputs.mainline_branch }}") && (github.event_name != 'pull_request')
    needs:
      - build_docker_staging
    uses: ./.github/workflows/retag_docker.yaml
    with:
      repo_url: "${{ inputs.repo_url }}"
      repo_project: "${{ inputs.repo_project }}"
      docker_image_name: "${{ inputs.docker_image_name }}"
      old_tag: "${{ github.ref_name }}"
      new_tag: "production"
