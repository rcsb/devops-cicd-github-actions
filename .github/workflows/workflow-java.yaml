name: Java Workflow
# Standard workflow for any Java based projects built with Jib. Because the current RCSB Java applications are tightly coupled, production image release must be separately scheduled and deployed in tandem with other Java applications.
# In specific java maven repo project you must use these 2: workflow-java (push on any branch) and maven-release-on-tag (push on any tag)

on:
  workflow_call:
    inputs:
      mainline_branch:
        type: string
        default: "master"
        description: "The mainline branch for the repo. Deployments to the staging and production environments are done only on push to this branch. Defaults to the master branch."
      docker_namespace:
        type: string
        default: "rcsb"
        description: "The Docker image namespace built by jib. Defaults to 'rcsb'."
      do_staging_build:
        type: string
        default: "false"
        description: "Build and push a staging tagged container image for this application on commits to the mainline_branch."

jobs:
  debug:
    name: "Debug conditionals"
    runs-on:
      - "self-hosted"
      - "java"
    steps:
      - name: "Output inputs and refs"
        run: |
          echo "=== Check branch conditionals"
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "inputs.mainline_branch: ${{ inputs.mainline_branch }}"
          echo "Is github.ref_name == inputs.mainline_branch: ${{ github.ref_name == inputs.mainline_branch }}"
          echo "=== Check event conditionals"
          echo "github.event_name: ${{ github.event_name }}"
          echo "Is github.event_name != 'pull_request': ${{ github.event_name != 'pull_request' }}"
          echo "=== Check environment conditionals"
          echo "inputs.do_staging_build: ${{ inputs.do_staging_build }}"
  # Test projects
  test_mvn:
    # If we are in a commit from the [actions] pipeline (see java-java-update-version.yaml), do nothing
    if: !contains(github.event.head_commit.message, '[actions]')
    name: "Run tests via mvn"
    uses: ./.github/workflows/run_mvn.yaml
    with:
      script: "test --no-transfer-progress"
      publish_surefire_test_report: true
  build_mvn:
    # If we are in a commit from the [actions] pipeline (see java-java-update-version.yaml), do nothing
    if: !contains(github.event.head_commit.message, '[actions]')
    name: "Build project with mvn"
    uses: ./.github/workflows/run_mvn.yaml
    with:
      script: package
  # Push jib
  build_jib:
    name: "Build and push docker image with Jib"
    if: github.event_name != 'pull_request'
    needs:
      - test_mvn
      - build_mvn
    uses: ./.github/workflows/run_mvn.yaml
    with:
      script: package jib:build -Djib.to.tags=${{ github.ref_name }} -Djib.target.namespace=rcsb --no-transfer-progress -Dmaven.test.skip=true -Djib.httpTimeout=0
  roll_version:
    name: "Roll maven version"
    needs:
      - test_mvn
      - build_mvn
    uses: ./.github/workflows/java-roll-version.yaml
  # Staging jobs
  # TODO review if we actually need staging. I don't see what the use is - JD 2025-05-21
  build_jib_staging:
    name: "Build docker image via jib with staging tag"
    if: |
      inputs.do_staging_build == 'true' &&
      github.ref_name == inputs.mainline_branch &&
      github.event_name != 'pull_request'
    needs:
      - test_mvn
      - build_mvn
    uses: ./.github/workflows/run_mvn.yaml
    with:
      script: package jib:build -Djib.to.tags=staging -Djib.target.namespace=rcsb --no-transfer-progress -Dmaven.test.skip=true -Djib.httpTimeout=0
  # Production jobs
  # The production build is taken care by a separate workflow that triggers on tag: release-on-tag.yaml
