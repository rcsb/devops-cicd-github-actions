# SPDX-FileCopyrightText: Copyright 2024, the RCSB PDB, University of California, Rutgers University, and contributors
# SPDX-FileCopyrightText: Copyright 2020-2024, Contributors to CICD
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/cicd
# SPDX-License-Identifier: Apache-2.0

# TODO: This is not complete.

name: Format PR

on:
  pull_request_target:
    types:
      - synchronize
      - opened
      - reopened
  issue_comment:
    types:
      - created

jobs:
  format:
    if: >
      github.event_name == 'pull_request_target' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/please-format'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref || github.event.issue.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip pip install 'ruff >=0.4.8'
          npm install --global prettier '>=3.0.0'

      - name: Run Ruff format
        continue-on-error: true
        # Format Python
        run: |
          ruff format .

      - name: Run Prettier
        continue-on-error: true
        # for Python projects, we're mostly formatting YAML and Markdown
        run: |
          prettier --write .

      - name: Run pre-commit hooks
        # do not continue on error because we should already be formatted
        # we're mostly checking the other things, like that shebangs are executable
        run: |
          pre-commit run --all-files

      - name: Commit changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "style: auto-format"
        continue-on-error: true

      - name: Push changes
        if: success() && steps.commit.outputs.commit != ''
        run: |
          git push origin ${{ github.event.pull_request.head.ref || github.event.issue.pull_request.head.ref }}

  merge:
    needs:
      - format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge PR
        run: gh pr merge \
          ${{ github.event.pull_request.number }} \
          --merge \
          --admin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
